Xception(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (block1): Block(
    (skip): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (skipbn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): SeparableConv2d(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
        (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): SeparableConv2d(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
        (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (block2): Block(
    (skip): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (skipbn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
        (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
        (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (block3): Block(
    (skip): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (skipbn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
        (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (block4): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block5): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block6): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block7): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block8): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block9): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block10): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block11): Block(
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (8): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block12): Block(
    (skip): Conv2d(728, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (skipbn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (rep): Sequential(
      (0): ReLU()
      (1): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeparableConv2d(
        (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (conv3): SeparableConv2d(
    (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
    (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
  )
  (bn3): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv4): SeparableConv2d(
    (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1536, bias=False)
    (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  )
  (bn4): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (last_linear): Linear(in_features=2048, out_features=4, bias=True)
)
Epoch: 1/40
Epoch: 001, Training: Loss: -406.3216, Accuracy: 52.5107%, 
		Validation: Loss: -406.3216, Accuracy: 55.7692%, Time: 7159.5627s
Best Accuracy for validation : 0.5577 at epoch 001
f', 'r', 'o', 'm', ' ', 'h', 'e', 'r', 'e', ' ', 's', 't', 'a', 'r', 't', ' ', 'e', 'v', 'a', 'l', 146, 8345, 1044, 1253, 5818, 3856, 9727, 8988, 7003, 8852, 10803, 10404, 3783, 10542, 3802, 10829, 10675, 24, 796, 6632, 7030, 9750, 4308, 7576, 5670, 10788, 846, 6355, 10269, 10534, 7002, 104, 5816, 3881, 9932, 1315, 3919, 8389, 4460, 3634, 3768, 1293, 129, 9059, 3659, 3002, 8312, 9282, 5619, 8710, 4416, 1062, 8440, 30, 9659, 968, 6631, 5390, 2850, 1090, 10533, 3770, 4621, 4738, 8756, 9235, 8722, 7164, 2465, 32, 3988, 8353, 9782, 10832, 848, 1827, 7706, 5275, 9728, 7845, 7854, 3411, 8366, 9242, 10830, 8749, 5705, 6151, 9222, 2912, 3767, 7435, 6462, 7169, 3251, 4618, 3915, 6084, 9722, 4249, 9765, 8853, 10828, 8359, 10473, 3763, 8315, 8344, 122, 9664, 6152, 4457, 4620, 3891, 9363, 10135, 6489, 2371, 418, 3660, 8755, 4477, 417, 113, 4309, 3402, 5613, 10352, 6492, 1226, 9272, 4444, 5735, 6692, 8394, 10557, 3909, 1495, 9769, 524, 3870, 10059, 3222, 11329, 8706, 11011, 8649, 3889, 4622, 8368, 3645, 1046, 8996, 7852, 2175, 9479, 3852, 5382, 2457, 9872, 803, 110, 10550, 10807, 8452, 971, 8725, 1232, 8381, 9668, 3116, 1092, 3975, 10552, 8086, 10071, 4085, 4334, 554, 9387, 8937, 1381, 10141, 3969, 8704, 5925, 10782, 2712, 3392, 5631, 8046, 9296, 7775, 8650, 8087, 1384, 3958, 8747, 8376, 5685, 3640, 7233, 9735, 1228, 7708, 5746, 2686, 7542, 2150, 301, 7839, 4310, 1633, 8998, 6493, 2711, 149, 851, 3114, 8705, 125, 967, 99, 3257, 5937, 1497, 133, 3, 2845, 3907, 134, 1089, 9927, 9340, 3250, 4332, 6360, 5936, 8386, 4475, 4254, 1065, 9732, 753, 8374, 91, 9389, 2852, 1302, 8735, 127, 2148, 1317, 6244, 3935, 3844, 9221, 4, 2685, 119, 7841, 15, 4194, 3254, 3119, 9866, 1292, 10822, 128, 2849, 3903, 1256, 10789, 7031, 10834, 1091, 1252, 5921, 9775, 8040, 5165, 7856, 3871, 4238, 9931, 1298, 9271, 5385, 866, 9325, 8731, 6240, 3452, 1500, 9388, 3963, 9672, 2526, 5070, 3983, 9334, 4083, 2309, 5698, 7837, 8521, 139, 3851, 3985, 11220, 9746, 8458, 4845, 3416, 3122, 9742, 4532, 9747, 9867, 10786, 7975, 3956, 5281, 3953, 3883, 3765, 6778, 1494, 3892, 9710, 860, 8721, 9238, 3403, 9704, 5702, 690, 5954, 10674, 3798, 7569, 4847, 3417, 3845, 8740, 11015, 3227, 1077, 6090, 686, 8736, 4330, 8792, 838, 6779, 6091, 5754, 3662, 3885, 3226, 9217, 3225, 5694, 1766, 9773, 8090, 4333, 5282, 4435, 4410, 2520, 3384, 9270, 1305, 3916, 5756, 3629, 3863, 6494, 8516, 8977, 9869, 9366, 8390, 2545, 7543, 9383, 9871, 8726, 1240, 8445, 4431, 691, 305, 9197, 5682, 10022, 9358, 4425, 9780, 9337, 10405, 9286, 5409, 8387, 4241, 18, 5637, 10835, 1095, 10543, 3926, 16, 5157, 8433, 3932, 11215, 5620, 9779, 10833, 3987, 6362, 8455, 5934, 8997, 8245, 3795, 9778, 3848, 5929, 5612, 11322, 550, 5413, 3228, 3810, 9764, 7035, 7850, 8625, 5608, 1244, 3766, 10366, 9287, 4248, 3537, 22, 958, 2709, 4438, 3964, 688, 10537, 5741, 9369, 963, 3406, 7165, 8397, 5951, 4452, 10063, 2170, 1835, 10819, 1051, 1224, 'f', 'r', 'o', 'm', ' ', 'h', 'e', 'r', 'e', ' ', 's', 't', 'a', 'r', 't', ' ', 'e', 'p', 'o', 'c', 'h', ' ', 'n', 'o', '.', '0'] [752, 936, 788, 600, 327, 923, 937, 123, 3, 342, 501, 899, 0, 3, 3, 1, 0, 0, 1, 0, 3, 0, 0, 1, 3, 3, 1, 0, 1, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 3, 1, 1, 0, 0, 3, 0, 3, 1, 0, 3, 0, 3, 0, 3, 0, 0, 976, 0, 0, 976, 3, 0, 3, 3, 3, 0, 0, 0, 0, 3, 0, 3, 0, 533, 0, 3, 0, 3, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 3, 0, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 3, 976, 0, 1, 1, 3, 1, 0, 0, 3, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0, 3, 3, 0, 0, 0, 3, 976, 0, 3, 3, 0, 0, 0, 977, 3, 0, 3, 0, 0, 0, 533, 3, 0, 3, 0, 0, 0, 3, 0, 3, 3, 533, 3, 0, 0, 0, 533, 0, 0, 0, 3, 3, 0, 0, 3, 1, 3, 0, 0, 533, 0, 3, 0, 3, 533, 3, 533, 0, 0, 3, 0, 0, 0, 3, 3, 533, 0, 0, 0, 3, 3, 0, 0, 0, 533, 0, 533, 3, 3, 0, 0, 0, 3, 3, 0, 3, 533, 3, 0, 0, 0, 3, 3, 0, 3, 533, 0, 0, 3, 533, 0, 0, 533, 0, 3, 3, 3, 0, 3, 0, 0, 3, 0, 3, 0, 0, 3, 0, 0, 533, 0, 3, 3, 3, 0, 0, 0, 0, 3, 0, 3, 3, 3, 0, 0, 3, 3, 0, 0, 3, 0, 3, 0, 3, 3, 533, 0, 3, 3, 0, 0, 3, 0, 3, 533, 3, 0, 3, 0, 0, 3, 0, 0, 3, 0, 3, 0, 0, 3, 3, 0, 3, 0, 976, 3, 3, 3, 0, 3, 0, 533, 3, 0, 3, 0, 533, 533, 0, 3, 3, 0, 0, 3, 3, 0, 0, 533, 0, 0, 533, 0, 3, 533, 0, 0, 0, 3, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 3, 3, 533, 3, 3, 0, 3, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3, 533, 0, 3, 3, 3, 0, 0, 3, 0, 0, 3, 0, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 3, 0, 3, 3, 0, 0, 0, 3, 3, 0, 3, 3, 3, 0, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 976, 3, 0, 0, 3, 3, 0, 976, 0, 0, 3, 3, 0, 0, 0, 3, 0, 0, 3, 1, 533, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 3, 0, 533, 0, 0, 3, 1, 3, 1, 0, 0, 0, 3, 0, 0, 0, 3, 0, 533, 0, 0, 0, 3, 0, 3, 0, 0, 3, 0, 0, 3, 3, 0, 0, 0, 3, 3, 0, 3, 3, 0, 0, 0, 0, 1, 0, 0, 3, 0, 3, 1, 0, 0, 3, 0, 3, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 3, 3, 3, 3, 0, 3, 0, 3, 0, 0, 0, 0, 3, 3, 1, 0, 0, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 1, 3, 0, 3, 3, 0, 0, 0, 3, 0, 3, 1, 0, 1, 0, 1, 0, 3, 3, 1, 0, 0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 0, 0, 3, 0, 1, 3, 0, 1, 1, 0, 3, 3, 0, 3, 1, 0, 1, 1, 3, 3, 3, 0, 0, 0, 3, 0, 3, 3, 1, 0, 3, 0, 0, 1, 3, 1, 0, 1, 3, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0, 1, 1, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 3, 1, 1, 0, 0, 3, 3, 3, 0, 0, 1, 0, 0, 3, 0, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 3, 0, 1, 0, 1, 0, 3, 3, 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 0, 0, 1, 0, 0, 0, 3, 0, 3, 0, 0, 1, 3, 1, 1, 0, 3, 0, 3, 0, 0, 3, 0, 1, 3, 0, 1, 3, 3, 0, 0, 0, 1, 1, 3, 3, 0, 0, 0, 1, 0, 3, 3, 0, 0, 1, 0, 3, 0, 3, 1, 3, 0, 3, 0, 0, 1, 0, 3, 0, 0, 0, 3, 3, 1, 0, 3, 0, 1, 0, 3, 3, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 1, 0, 1, 0, 0, 3, 0, 3, 0, 0, 3, 0, 3, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 0, 0, 3, 0, 0, 0, 3, 1, 3, 1, 1, 0, 3, 3, 0, 0, 0, 0, 1, 0, 0, 3, 1, 0, 3, 3, 0, 3, 1, 0, 1, 3, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 3, 0, 3, 0, 0, 0, 1, 3, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 3, 0, 3, 3, 0, 0, 3, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 1, 0, 3, 0, 0, 0, 3, 0, 3, 3, 0, 0, 1, 0, 3, 0, 0, 3, 0, 0, 3, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 3, 0, 0, 3, 0, 1, 1, 0, 0, 0, 0, 0, 1, 3, 0, 3, 0, 0, 1, 1, 0, 0, 3, 3, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 0, 3, 1, 0, 0, 3, 1, 3, 0, 0, 3, 3, 1, 0, 0, 3, 0, 0, 1, 3, 0, 3, 3, 0, 3, 0, 0, 0, 0, 0, 1, 3, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 3, 1, 0, 0, 0, 1, 3, 3, 0, 3, 1, 1, 3, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 3, 3, 0, 0, 0, 0, 3, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 3, 0, 3, 0, 1, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 3, 3, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 1, 0, 3, 3, 0, 0, 1, 0, 3, 0, 3, 1, 0, 0, 0, 1, 0, 3, 3, 3, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 3, 3, 0, 0, 0, 0, 0, 3, 0, 1, 3, 3, 0, 1, 0, 0, 3, 1, 3, 3, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 3, 0, 0, 0, 1, 3, 1, 3, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0, 3, 1, 0, 0, 1, 0, 0, 3, 0, 0, 0, 3, 1, 0, 1, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 1, 0, 0, 3, 3, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 3, 0, 3, 0, 1, 0, 0, 1, 0, 1, 0, 3, 0, 3, 0, 1, 0, 1, 0, 0, 3, 0, 3, 0, 1, 0, 3, 0, 0, 1, 0, 0, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 3, 3, 0, 1, 0, 0, 0, 0, 3, 0, 1, 3, 'f', 'r', 'o', 'm', ' ', 'h', 'e', 'r', 'e', ' ', 's', 't', 'a', 'r', 't', ' ', 'e', 'v', 'a', 'l', 1, 3, 3, 3, 0, 0, 1, 3, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 3, 0, 3, 0, 3, 0, 3, 3, 0, 1, 3, 0, 0, 3, 1, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 1, 1, 3, 3, 3, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 3, 1, 3, 0, 3, 0, 0, 3, 1, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 0, 3, 3, 1, 0, 1, 0, 3, 1, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 1, 3, 0, 3, 3, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0, 1, 0, 0, 3, 3, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 3, 1, 0, 3, 3, 0, 0, 1, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 0, 0, 0, 0, 3, 0, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 3, 3, 3, 3, 0, 3, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 3, 0, 1, 0, 3, 3, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 0, 0, 0, 1, 3, 3, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 1, 0, 0, 0, 3, 0, 3, 0, 3, 1, 0, 0, 3, 0, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0, 3, 1, 0, 0, 0, 1, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 'f', 'r', 'o', 'm', ' ', 'h', 'e', 'r', 'e', ' ', 's', 't', 'a', 'r', 't', ' ', 'e', 'p', 'o', 'c', 'h', ' ', 'n', 'o', '.', '0'] [3, 0, 0, 3, 1, 1, 0, 1, 1, 0, 1, 1, 3, 1, 3, 1, 0, 0, 3, 0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 0, 3, 0, 3, 1, 0, 0, 0, 1, 0, 1, 3, 0, 3, 0, 1, 0, 0, 3, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 3, 0, 0, 1, 3, 1, 3, 3, 0, 0, 0, 1, 1, 1, 3, 1, 0, 1, 0, 3, 0, 3, 0, 1, 3, 0, 3, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 3, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 3, 0, 3, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 3, 1, 0, 0, 0, 1, 0, 1, 3, 0, 3, 0, 0, 1, 1, 0, 3, 3, 0, 0, 0, 0, 0, 3, 1, 1, 0, 1, 0, 3, 0, 1, 3, 1, 3, 0, 1, 3, 0, 1, 3, 1, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 3, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 3, 1, 0, 0, 3, 0, 1, 3, 1, 1, 1, 0, 0, 0, 0, 3, 3, 1, 3, 0, 3, 1, 3, 0, 0, 1, 0, 3, 0, 1, 1, 1, 3, 0, 1, 0, 3, 0, 0, 3, 0, 1, 3, 1, 0, 3, 0, 0, 3, 0, 0, 0, 0, 1, 3, 0, 1, 0, 1, 3, 1, 3, 1, 0, 0, 1, 3, 1, 3, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 1, 1, 1, 3, 0, 0, 0, 0, 1, 3, 3, 3, 3, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 3, 1, 1, 1, 0, 3, 1, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 3, 0, 1, 0, 1, 0, 0, 3, 0, 3, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 3, 3, 0, 3, 1, 0, 3, 1, 3, 0, 3, 0, 0, 3, 3, 0, 0, 1, 3, 1, 0, 0, 3, 0, 0, 3, 0, 1, 1, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 3, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 3, 1, 3, 1, 0, 0, 1, 0, 0, 1, 0, 3, 3, 0, 3, 0, 1, 0, 3, 0, 1, 0, 1, 0, 3, 0, 1, 0, 3, 3, 1, 1, 0, 3, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 3, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 3, 0, 1, 1, 0, 0, 0, 1, 0, 3, 1, 0, 3, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0, 1, 1, 3, 0, 0, 1, 3, 0, 3, 1, 3, 3, 1, 0, 0, 0, 0, 0, 3, 3, 0, 1, 1, 1, 1, 1, 0, 3, 0, 3, 0, 0, 0, 3, 1, 0, 0, 0, 3, 0, 1, 1, 3, 0, 0, 0, 0, 1, 3, 1, 0, 1, 1, 0, 0, 0, 3, 0, 1, 1, 1, 1, 3, 3, 1, 0, 0, 1, 0, 0, 1, 0, 1, 3, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 3, 1, 0, 1, 1, 0, 0, 3, 3, 3, 1, 1, 1, 3, 0, 0, 1, 1, 0, 3, 0, 0, 1, 1, 0, 1, 3, 0, 3, 3, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3, 0, 1, 1, 1, 3, 0, 3, 0, 0, 0, 1, 1, 1, 1, 0, 1, 3, 1, 1, 3, 0, 1, 1, 1, 0, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 1, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 1, 3, 0, 3, 0, 3, 1, 3, 1, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 3, 3, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 1, 0, 3, 0, 0, 3, 0, 3, 0, 1, 3, 0, 0, 0, 3, 1, 0, 0, 0, 0, 3, 0, 3, 1, 1, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 1, 3, 0, 0, 3, 0, 0, 1, 3, 3, 0, 0, 1, 1, 3, 3, 0, 0, 0, 0, 1, 0, 0, 0, 3, 3, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 0, 0, 0, 3, 1, 0, 3, 1, 1, 3, 0, 3, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 3, 0, 1, 3, 0, 0, 3, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 3, 0, 3, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 3, 3, 0, 1, 1, 1, 0, 3, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0, 0, 3, 1, 3, 3, 0, 3, 0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 3, 0, 0, 1, 1, 1, 3, 1, 3, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 3, 0, 3, 0, 0, 1, 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 3, 3, 0, 1, 0, 1, 1, 3, 0, 1, 3, 3, 0, 0, 1, 0, 0, 1, 0, 1, 3, 0, 1, 0, 0, 0, 1, 1, 3, 0, 1, 1, 0, 1, 0, 0, 1, 0, 3, 1, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 3, 1, 0, 3, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 3, 1, 0, 3, 3, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 3, 3, 0, 1, 1, 0, 1, 3, 0, 1, 0, 3, 0, 0, 0, 0, 1, 3, 1, 0, 1, 1, 3, 0, 0, 0, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 3, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 3, 0, 3, 3, 0, 0, 1, 1, 0, 1, 1, 3, 3, 3, 3, 3, 1, 0, 0, 1, 0, 3, 3, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 3, 0, 0, 3, 0, 1, 3, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 3, 0, 1, 3, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 3, 3, 1, 3, 1, 0, 1, 1, 0, 3, 0, 0, 3, 1, 3, 1, 3, 0, 1, 0, 0, 1, 0, 3, 0, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 3, 1, 1, 1, 1, 3, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 3, 0, 1, 1, 1, 1, 0, 0, 1, 0, 3, 0, 0, 3, 3, 3, 0, 1, 0, 1, 1, 3, 1, 1, 0, 1, 1, 3, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 3, 1, 1, 3, 3, 1, 1, 1, 1, 3, 1, 0, 3, 0, 1, 3, 0, 1, 1, 1, 0, 1, 1, 3, 0, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 3, 0, 1, 0, 3, 1, 1, 3, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0, 3, 3, 1, 1, 3, 1, 0, 0, 0, 0, 3, 3, 0, 1, 0, 1, 3, 3, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 3, 3, 0, 0, 3, 3, 3, 1, 3, 0, 1, 3, 1, 0, 0, 1, 0, 0, 0, 3, 0, 3, 0, 0, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 3, 0, 0, 0, 1, 0, 1, 1, 3, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 3, 0, 1, 3, 0, 3, 0, 1, 3, 0, 0, 0, 0, 1, 0, 3, 3, 0, 0, 3, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 3, 0, 3, 0, 0, 1, 3, 0, 3, 1, 1, 1, 1, 3, 0, 0, 0, 3, 0, 0, 1, 3, 1, 1, 0, 3, 0, 1, 0, 0, 3, 0, 0, 0, 1, 0, 0, 1, 0, 3, 3, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 3, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 3, 0, 3, 0, 3, 3, 0, 3, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 3, 0, 1, 1, 3, 0, 0, 0, 1, 1, 0, 1, 3, 0, 3, 1, 1, 0, 0, 0, 0, 1, 3, 3, 3, 1, 1, 3, 0, 3, 3, 3, 1, 3, 0, 1, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 3, 3, 0, 1, 1, 3, 0, 3, 0, 0, 0, 0, 1, 0, 0, 3, 1, 3, 1, 0, 3, 1, 1, 0, 0, 0, 3, 0, 3, 0, 0, 3, 0, 1, 3, 0, 0, 3, 3, 0, 0, 0, 1, 1, 3, 0, 1, 1, 0, 3, 0, 1, 0, 1, 1, 3, 0, 1, 1, 0, 1, 0, 0, 3, 3, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 3, 1, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 3, 3, 0, 1, 3, 3, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 0, 0, 3, 1, 3, 0, 0, 1, 1, 0, 0, 3, 0, 1, 0, 1, 0, 3, 0, 3, 3, 1, 3, 0, 1, 0, 0, 0, 3, 1, 0, 0, 0, 3, 0, 3, 0, 1, 1, 0, 0, 0, 0, 1, 3, 0, 3, 0, 0, 0, 1, 3, 0, 0, 3, 'f', 'r', 'o', 'm', ' ', 'h', 'e', 'r', 'e', ' ', 's', 't', 'a', 'r', 't', ' ', 'e', 'v', 'a', 'l', 0, 1, 1, 3, 0, 1, 3, 1, 0, 0, 3, 0, 1, 1, 1, 3, 0, 1, 1, 0, 0, 3, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 3, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 3, 3, 0, 1, 1, 3, 3, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 3, 0, 0, 1, 0, 1, 1, 3, 1, 0, 0, 0, 3, 3, 3, 3, 1, 1, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 1, 0, 3, 1, 0, 0, 0, 1, 1, 3, 0, 3, 0, 1, 1, 0, 0, 0, 0, 0, 1, 3, 0, 1, 0, 3, 0, 3, 0, 0, 1, 3, 1, 0, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 3, 0, 0, 1, 0, 1, 1, 1, 1, 3, 0, 0, 1, 0, 0, 0, 1, 1, 1, 3, 1, 3, 3, 0, 3, 3, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 1, 1, 3, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 1, 0, 3, 1, 3, 1, 0, 3, 0, 1, 1, 0, 1, 1, 0, 0, 3, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0, 3, 1, 0, 0, 3, 1, 1, 0, 3, 0, 1, 1, 1, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 3, 1, 0, 1, 3, 0, 0, 3, 0, 3, 3, 1, 3, 0, 3, 1, 1, 0, 3, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 3, 3, 0, 1, 3, 0, 0, 0, 3, 0, 1, 1, 1, 0, 3, 1, 0, 3, 0, 3, 0, 3, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 3, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 3, 3, 3, 0, 1, 3, 1, 1, 1, 1, 0, 0, 1, 0, 1, 3, 3, 0, 1, 0, 3, 3, 1, 3, 0, 0, 0, 1, 0, 3, 3, 1, 3, 0, 1, 0, 3, 1, 1, 1, 3, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 3, 0, 0, 1, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 3, 0, 0, 3, 0, 3, 1, 1, 0, 1, 0, 0, 3, 1, 0, 1, 1, 1, 3, 3, 0, 0, 0, 3, 1, 0, 0, 3, 1, 0, 'f', 'r', 'o', 'm', ' ', 'h', 'e', 'r', 'e', ' ', 's', 't', 'a', 'r', 't', ' ', 'e', 'p', 'o', 'c', 'h', ' ', 'n', 'o', '.', '0']
Epoch: 2/40
